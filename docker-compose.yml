version: "3.4"

services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: always
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-kbin}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-kbin}?serverVersion=${POSTGRES_VERSION:-13}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: http://${SERVER_NAME:-kbin.localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-!ChangeThisRedisPass!}
      REDIS_DNS: "redis://${REDIS_PASSWORD:-!ChangeThisRedisPass!}@redis:6379"
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-!ChangeThisRabbitPass!}
      RABBITMQ_USER: ${RABBITMQ_USER:-kbin}
      S3_KEY: ${S3_key:-!DUMMY}
      S3_SECRET: ${S3_SECRET:-!DUMMYlongtemppassword}
      S3_BUCKET: ${S3_BUCKET:-kbinmedia}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_USE_PATH_STYLE_ENDPOINT: true
      S3_VERSION: ${S3_VERSION:-2006-03-01}
    # volumes:
    #   - media:/srv/app/public/media
    depends_on:
      - redis
      - rabbitmq
      - minio

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
      - minio
    environment:
      SERVER_NAME: ${SERVER_NAME:-kbin.localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      AWS_ACCESS_KEY_ID: ${S3_KEY:-!DUMMY}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET:-!DUMMYlongtemppassword}
      S3_BUCKET: ${S3_BUCKET:-kbinmedia}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
    restart: always
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      # - media:/srv/app/public/media
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # # HTTPS
      # - target: 443
      #   published: ${HTTPS_PORT:-443}
      #   protocol: tcp
      # # HTTP/3
      # - target: 443
      #   published: ${HTTP3_PORT:-443}
      #   protocol: udp

  redis:
    image: redis:7.0.11-alpine
    restart: always
    # command: redis-server --save 20 1 --loglevel debug --requirepass ${REDIS_PASSWORD:-!ChangeThisRedisPass!} --maxmemory-policy volatile-ttl
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-!ChangeThisRedisPass!} --maxmemory-policy volatile-ttl
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    hostname: kbin-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-!ChangeThisRabbitPass!}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-kbin}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  messenger_kbin:
    build:
      context: .
      target: app_php
    command: 'sh -c "php bin/console messenger:consume async --time-limit=3600"'
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-kbin}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-kbin}?serverVersion=${POSTGRES_VERSION:-13}&charset=${POSTGRES_CHARSET:-utf8}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: http://${SERVER_NAME:-kbin.localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-!ChangeThisRedisPass!}
      REDIS_DNS: "redis://${REDIS_PASSWORD:-!ChangeThisRedisPass!}@redis:6379"
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-!ChangeThisRabbitPass!}
      RABBITMQ_USER: ${RABBITMQ_USER:-kbin}
    healthcheck:
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: always
    depends_on:
      - php

  messenger_ap:
    build:
      context: .
      target: app_php
    command: 'sh -c "php bin/console messenger:consume async_ap --time-limit=3600"'
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-kbin}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-kbin}?serverVersion=${POSTGRES_VERSION:-13}&charset=${POSTGRES_CHARSET:-utf8}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: http://${SERVER_NAME:-kbin.localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-!ChangeThisRedisPass!}
      REDIS_DNS: "redis://${REDIS_PASSWORD}@redis:6379"
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-!ChangeThisRabbitPass!}
      RABBITMQ_USER: ${RABBITMQ_USER:-kbin}
    healthcheck:
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: always
    depends_on:
      - php
      - rabbitmq

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kbin}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-kbin}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5433:5432"
###< doctrine/doctrine-bundle ###

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

  minio:
    image: minio/minio:RELEASE.2023-06-16T02-41-06Z
    environment:
      MINIO_ROOT_USER: ${S3_KEY:-!DUMMY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET:-!DUMMYlongtemppassword}
      BUCKET: ${S3_BUCKET:-kbinmedia}
    entrypoint: /bin/sh
    restart: always
    ports:
      - 9001:9001
    command: [-c, 'mkdir -p /data/$$BUCKET; /usr/bin/docker-entrypoint.sh server /data --console-address ":9001"']
    volumes:
      - objstore:/data

volumes:
  caddy_data:
  caddy_config:
  db-data:
  rabbitmq-data:
  redis-data:
  # media:
  objstore:
